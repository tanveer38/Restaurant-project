<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        avU0699iAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="guna2MessageDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>